
PERFORMANCE E OTTIMIZAZZIONI
m = mobile
d = desktop

MOBILE
{local m }  16/17 request   |	979 KB/979 KB   |   finish: 847 ms	|	DOMContentLoaded: 1.13 s	|	Load: 1.38 s
{local m }  15/16 request	|	365 KB/365 KB	|   finish: 725 ms	|	DOMContentLoaded: 723 ms	|	Load: 1.05 s 	
{local m }  15/16 request	|	352 KB/352 KB	|   finish: 623 ms	|	DOMContentLoaded: 617 ms	|	Load: 912 ms
{local m }  10 request	    |	267 KB/352 KB	|   finish: 765 ms	|	DOMContentLoaded: 738 ms	|	Load: 976 ms
{local m }  9 request	    |	182 KB/352 KB	|   finish: 523 ms	|	DOMContentLoaded: 483 ms	|	Load: 808 ms
{local m }  9 request	    |	44.3 KB	        |   finish: 497 ms	|	DOMContentLoaded: 451 ms	|	Load: 693 ms
{local m }  9 request	    |	39.7 KB	        |   finish: 658 ms	|	DOMContentLoaded: 427 ms	|	Load: 627 ms
{local m }  9 request	    |	39.7 KB	        |   finish: 601 ms	|	DOMContentLoaded: 356 ms	|	Load: 580 ms
{local m }  9 request	    |	39.7 KB	        |   finish: 537 ms	|	DOMContentLoaded: 302 ms	|	Load: 524 ms







DESKTOP
{local d }  26 request	    |   18.1 MB         |	finish: 8.36 s	|	DOMContentLoaded: 1.11 s	|	Load: 8.37 s
{local d }  4/11 request    |   14.5/16.6 MB    |	finish: 1.13 s	|	DOMContentLoaded: 419 ms	|	Load: 1.09 s
{local d }  21 request      |   3.0 KB          |	finish: 972 ms	|	DOMContentLoaded: 465 ms	|	Load: 660  s









domodossola - milano - ancona - napoli - zebra - imola - 83 @ - genova - milano - ancona - imola - livorna . com

                           
dmanzi83@gmail.com   dmanzi83@hotmail.it


██████╗  █████╗ ███╗   ██╗██╗███████╗██╗     ███████╗    ███╗   ███╗ █████╗ ███╗   ██╗███████╗██╗
██╔══██╗██╔══██╗████╗  ██║██║██╔════╝██║     ██╔════╝    ████╗ ████║██╔══██╗████╗  ██║╚══███╔╝██║
██║  ██║███████║██╔██╗ ██║██║█████╗  ██║     █████╗      ██╔████╔██║███████║██╔██╗ ██║  ███╔╝ ██║
██║  ██║██╔══██║██║╚██╗██║██║██╔══╝  ██║     ██╔══╝      ██║╚██╔╝██║██╔══██║██║╚██╗██║ ███╔╝  ██║
██████╔╝██║  ██║██║ ╚████║██║███████╗███████╗███████╗    ██║ ╚═╝ ██║██║  ██║██║ ╚████║███████╗██║
╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝╚══════╝╚══════╝╚══════╝    ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚═╝

php -S localhost:3000 -t blog/public

/******************************************|
| echo '<pre>', print_r($post) ,'</pre>';  |
|******************************************/
                                                                                        
/***************************************************************|
| echo '<pre>'.json_encode($data, JSON_PRETTY_PRINT).'</pre>';  |
|***************************************************************/

<pre class="prettyprint">...</pre>
<!-- <span><h2>&#x2709 &#x1F5BC &#x1F40C</h2></span> -->
// Đ	Dstrok	00110	272
// ⊸	multimap	022B8	8888
// ⊸	mumap	022B8	8888
// м	mcy	0043C	1084
// М	Mcy	0041C	1052
// —	mdash	02014	8212
// …	mldr	02026	8230
// ¯	macr	000AF	175
// ⊡	dotsquare	022A1	8865
// ⟿	dzigrarr	027FF	10239
// ⋀	Wedge	022C0	8896
// ∧	wedge	02227	8743
// |	verbar	0007C	124
// ❘	VerticalSeparator	02758	10072
// ∴	Therefore	02234	8756
// Þ	THORN	000DE	222
// ‴	tprime	02034	8244
// ∭	tint	0222D	8749
// Σ	Sigma	003A3	931
// ∖	smallsetminus	02216	8726
// ⊏	sqsub	0228F	8847
// ⋐	Sub	022D0	8912
// ∑	Sum	02211	8721
// ∑	sum	02211	8721
// ⤦	swarhk	02926	10534  D⤦M
// ⤚	ratail	0291A	10522      
// ∋	ReverseElement	0220B	8715    
// ⎱	rmoust	023B1	9137                |⎱⎱⎱
// ⫮	rnmid	02AEE	10990  
// 𝔐	Mfr	1D510	120080                       ⫮⫮⫮  
// ℳ	phmmat	02133	8499
// ⋔	pitchfork	022D4	8916
// Ő	Odblac	00150	336
// 𝔒	Ofr	1D512	120082 
// 𝔇	Dfr	1D507	120071
// 𝔔	Qfr	1D514	120084
// ∇	nabla	02207	8711
// ≮	NotLess	0226E	8814
// ⊏̸	NotSquareSubset	0228F + 00338
// ⫛	mlcp	02ADB	10971
// λ	lambda	003BB	955
// Ъ	HARDcy	0042A	1066
// ⫙	forkv	02AD9	10969
// Ð	ETH	000D0	208
// Ď	Dcaron	0010E	270
// ⩋	capcap	02A4B	10827
// ⩌	ccups	02A4C	10828
// ≡	Congruent	02261	8801
// ⫐	csup	02AD0	10960
// ⫒	csupe	02AD2	10962
// ⋯	ctdot	022EF	8943
// ⤸	cudarrl	02938	10552
// ⋂	bigcap	022C2	8898
// ⩕	andand	02A55	10837
// ⩚	andv	02A5A	10842
// ≋	apid	0224B	8779
// ❰	10096	2770	 	HEAVY LEFT-POINTING ANGLE BRACKET ORNAMENT
// ❱	10097	2771	 	HEAVY RIGHT-POINTING ANGLE BRACKET ORNAMENT
// ❴	10100	2774	 	MEDIUM LEFT CURLY BRACKET ORNAMENT
// ❵	10101	2775	 	MEDIUM RIGHT CURLY BRACKET ORNAMENT
// ❮	10094	276E	 	HEAVY LEFT-POINTING ANGLE QUOTATION MARK ORNAMENT
// ❯	10095	276F	 	HEAVY RIGHT-POINTING ANGLE QUOTATION MARK ORNAMENT
// ‹	8249	2039	&lsaquo;	SINGLE LEFT-POINTING ANGLE QUOTATION MARK
// ›	8250	203A	&rsaquo;	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
// ❪	10090	276A	 	MEDIUM FLATTENED LEFT PARENTHESIS ORNAMENT
// ❫	10091	276B	 	MEDIUM FLATTENED RIGHT PARENTHESIS ORNAMENT
// ⛾	9982	26FE	 	CUP ON BLACK SQUARE
// ₪	8362	20AA	 	NEW SHEQEL SIGN
// ĐМ⊸  Đ⊡М⊡   ĐМ⟿  D⋀⋀   D∧∧   D//❘   Þ∧∧   Þ‴     D∭    DΣ     ∖\∖     ⊏❘\\\   ⊏❘∧∧     ⊏❘м    Þм     ⋐м      ⋐∧∧     Đ∑⊸
// Þ⋔   Đ⋔   𝔒⋔         Đм⊸    Đ⊸  ⊏̸м     ⊏̸∧∧   ⊏̸\\\     Ъλλ    𝔒⫙     𝔇∧∧    𝔇⫙  𝔇𝔐   Þ⩋  𝔇ℳ       d⩋  ⩌Σ 
// ⫐∧∧   ⫐м      ⫐\\\    ⫐Σ     ⫒‴     Đ⋯М⊸       Đ⋯м⊸       Đ⋯|||⊸     ❘   Đ⋯❘'❘⊸   ⋯Đ⋯❘❘❘⊸  ⋯ Đ⋯|❘|⋯  ⋯Đ⋯❘❘❘⊸
// ⫐⤸⤸⤸     ⫐⋂⋂      Þ⩕     ⋐❘⩕    ⊏̸⩕   ⊏̸⩚     ⊏̸⩚           ⫐≋anzi      ⊏̸aniele ⩕anzi 
// ‹dm› ❮dm❯    ❰λλ❱
//  ❰dm❱  ❰d|m❱   ❰⋯Đ⋯❘❘❘⊸❱    ❰Đ❘❘❘❱    ❰⫐❘❘❘❱  ⛾    ❰⛾❱     ⫐⛾❘❘❘   𝔇❰\\\❱       ❰𝔇\\\❱
// D+<|x3> D+(|x3)  [D+(|x3)]  [d+(|x3)]
// ❴❰❪dm❫❱❵      ❴❰❪d|m❫❱❵      d❵❱❫❪❰❴m     ❵❱❫dm❪❰❴       d❱m



Abbiamo mandato una email al tuo indirizzo email.
Per favore segui le istruzioni contenute nell'email per creare una nuova password.
Se l'email non ti arriva, controlla la tua cartella spam o prova a collegarti ancora per inviare un'altra email di attivazione.";


"Ti abbiamo mandato una email al tuo indirizzo di posta.
Per favore segui le istruzioni contenute nell'email per creare una nuova password.
Se l'email non ti arriva, controlla la tua cartella spam o prova
a ripetere la procedura di cambio password";



CREATE TABLE users ( 
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
username VARCHAR(30) NOT NULL, 
email VARCHAR(50), 
dataIscrizione DATETIME 
); 

CREATE TABLE posts ( 
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
user_id INT(6) UNSIGNED, 
message VARCHAR(100) NOT NULL, 
date DATETIME 
); 

CREATE TABLE postcomments ( 
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
user_id INT(6) UNSIGNED, 
post_id INT(6) UNSIGNED, 
comment VARCHAR(100) NOT NULL, 
); 

INSERT INTO `users` (`id`, `username`, `email`, `dataIscrizione`) VALUES ('1', 'John', 'john@mail.it', CURRENT_DATE); 
INSERT INTO `posts` (`id`, `user_id`, `message`, `date`) VALUES ('1', '1', 'questo è un post', CURRENT_DATE);
INSERT INTO `postcomments` (`id`, `user_id`, `post_id`, `comment`) VALUES ('1', '1', '1', 'questo è un commento'); 







 /*
 /***********************************************************************************************************|
 * PASS-PARAM                                                                                               |
 * Verifica dopo attivazione da Mail per fare resettare/cambiare/creare la password                         |
 * Controlla i parametri email e hash passati come parametri dell'URL se sono corrispondenti nel database   |
 * Controlla anche se è un account già registrato: 'user_status= 1'                                         |
 * Questo metodo si attiva solo quando riceviamo un email dal sistema per il recupero password              |
 ***********************************************************************************************************/
public function passParam()
{
    // verifichiamo dalla url che abbiamo ricevuto dalla Mail per la verifica se abbiamo la variabile email e hash
    if (isset($_GET['email']) && !empty($_GET['email']) and isset($_GET['hash']) && !empty($_GET['hash'])) {
       
        $email = $this->isEmailStored();   //   $email = $_GET['email'];
        $hash = $this->hash; // la hash passata dal URL col $_GET viene validata nel costruttore della classe 'Validate'

        $sql = "SELECT * FROM users WHERE user_email= :email AND user_activation_key= :hash AND user_status= 1";

        if ($stmt = $this->conn->prepare($sql)) // Prepariamo lo Statement della Select
        {
            $stmt->bindParam(':email', $email, PDO::PARAM_STR, 32);
            $stmt->bindParam(':hash', $hash, PDO::PARAM_STR);
            if ($stmt->execute()) // Tentiamo di eseguire lo statement
            {
                if ($stmt->rowCount() == 1) { // se nel database cè una corrispondenza con i parametri passati dal link dell'email
                    return true;
                } 
                else 
                {
                    $this->message = 'Questo account non esiste';
                }

            } else { $this->message = "Questo account non esiste oppure l' URL non è valido";}
        } else { $this->message = "Qualcosa è andato storto. Per favore prova più tardi.";}
        $stmt = null; // Chiude stmt connection
        $this->conn = null; // Chiude PDO connection

    } else { $this->message = "I parametri non sono stati passati";}
}